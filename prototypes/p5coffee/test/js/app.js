// Generated by CoffeeScript 1.6.2
(function() {
  var Bean, coffee_draw;

  coffee_draw = function(p5) {
    p5.setup = function() {
      p5.size(400, 400);
      p5.background(0);
      return this.beans = [];
    };
    return p5.draw = function() {
      var circle_size, i, _i, _results;

      p5.noStroke();
      _results = [];
      for (i = _i = 0; _i <= 200; i = _i += 1) {
        circle_size = p5.random(10, 40);
        if (circle_size < 30) {
          p5.fill(255, 0, 0);
        } else {
          p5.fill(0, 0, 255);
        }
        _results.push(p5.ellipse(p5.random(0, p5.width), p5.random(0, p5.height), circle_size, circle_size));
      }
      return _results;
    };
  };

  Bean = (function() {
    function Bean(p5, opts) {
      this.p5 = p5;
      this.x = opts.x;
      this.y = opts.y;
      this.x_off = opts.x_off;
      this.y_off = opts.y_off;
      this.vel = opts.vel || 3;
      this.accel = opts.accel || -0.003;
    }

    Bean.prototype.draw = function() {
      if (!(this.vel > 0)) {
        return;
      }
      this.x_off += 0.0007;
      this.y_off += 0.0007;
      this.vel += this.accel;
      this.x += this.p5.noise(this.x_off) * this.vel - this.vel / 2;
      this.y += this.p5.noise(this.y_off) * this.vel - this.vel / 2;
      this.set_color();
      return this.p5.point(this.x, this.y);
    };

    Bean.prototype.set_color = function() {
      var a, b, h, s;

      this.p5.colorMode(this.p5.HSB, 360, 100, 100);
      h = this.p5.noise((this.x_off + this.y_off) / 2) * 360;
      s = 100;
      b = 100;
      a = 4;
      return this.p5.stroke(h, s, b, a);
    };

    return Bean;

  })();

  $(document).ready(function() {
    var canvas, processing;

    canvas = document.getElementById("p5canvas");
    return processing = new Processing(canvas, coffee_draw);
  });

}).call(this);
