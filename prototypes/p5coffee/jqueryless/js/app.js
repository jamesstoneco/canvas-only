// Generated by CoffeeScript 1.6.2
(function() {
  var coffee_draw, resizeSketch;

  coffee_draw = function(p5) {
    var Cubist, cubistArr;

    Cubist = (function() {
      function Cubist(opts) {
        this.loc = new p5.PVector(opts.x, opts.y);
        this.vel = new p5.PVector(opts.velx, opts.vely);
        this.size = opts.size;
        this.color = opts.color;
        this.alpha = opts.alpha;
      }

      Cubist.prototype.calc = function() {
        this.jitter();
        this.loc.add(this.vel);
        if (this.loc.x < 0 || this.loc.x > p5.width) {
          this.vel.x = -this.vel.x;
        }
        if (this.loc.y < 0 || this.loc.y > p5.height) {
          return this.vel.y = -this.vel.y;
        }
      };

      Cubist.prototype.jitter = function() {
        var jitAmt, tempVec;

        jitAmt = 0.1;
        tempVec = new p5.PVector(p5.random(-jitAmt, jitAmt), p5.random(-jitAmt, jitAmt));
        return this.vel.add(tempVec);
      };

      Cubist.prototype.display = function() {
        p5.stroke(0, this.alpha);
        p5.fill(this.color, this.alpha);
        return p5.rect(this.loc.x, this.loc.y, this.size, this.size);
      };

      return Cubist;

    })();
    cubistArr = new Array();
    p5.setup = function() {
      var cubist, i, _i, _results;

      _results = [];
      for (i = _i = 0; _i <= 100; i = _i += 1) {
        cubist = new Cubist({
          x: p5.random(0, p5.width),
          y: p5.random(0, p5.height),
          velx: p5.random(-1, 1),
          vely: p5.random(-1, 1),
          size: 100,
          color: p5.color(p5.random(127, 255), 0, 0),
          alpha: 3
        });
        _results.push(cubistArr.push(cubist));
      }
      return _results;
    };
    return p5.draw = function() {
      var cubist, _i, _j, _len, _len1, _results;

      for (_i = 0, _len = cubistArr.length; _i < _len; _i++) {
        cubist = cubistArr[_i];
        cubist.calc();
      }
      _results = [];
      for (_j = 0, _len1 = cubistArr.length; _j < _len1; _j++) {
        cubist = cubistArr[_j];
        _results.push(cubist.display());
      }
      return _results;
    };
  };

  /* do not edit below
  */


  domready(function() {
    window.canvas = document.getElementById("p5canvas");
    window.processing = new Processing(canvas, coffee_draw);
    return resizeSketch();
  });

  resizeSketch = function() {
    var d, e, g, w, x, y;

    w = window;
    d = document;
    e = d.documentElement;
    g = d.getElementsByTagName('body')[0];
    x = w.innerWidth || e.clientWidth || g.ClientWidth;
    y = w.innerHeight || e.clientHeight || g.ClientHeight;
    console.log(x + " , " + y);
    return window.processing.size(x, y);
  };

}).call(this);
