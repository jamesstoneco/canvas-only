// Generated by CoffeeScript 1.6.2
(function() {
  var coffee_draw;

  coffee_draw = function(p5) {
    var Particle, number_of_particles, particles;

    Particle = (function() {
      function Particle(opts) {
        this.loc = new toxi.geom.Vec2D(opts.x, opts.y);
        this.vel = new toxi.geom.Vec2D(opts.velx, opts.vely);
        this.height = opts.height;
        this.width = opts.width;
      }

      Particle.prototype.jitter = function() {
        var jitter_amt;

        jitter_amt = 0.1;
        this.vel.x += p5.random(-jitter_amt, jitter_amt);
        return this.vel.y += p5.random(-jitter_amt, jitter_amt);
      };

      Particle.prototype.calc = function() {
        this.loc = this.loc.add(this.vel);
        this.jitter();
        this.calc_color();
        if (this.loc.x < 0 || this.loc.x > p5.width) {
          this.vel.x = -this.vel.x;
        }
        if (this.loc.y < 0 || this.loc.y > p5.height) {
          return this.vel.y = -this.vel.y;
        }
      };

      Particle.prototype.calc_color = function() {
        var distance, tempColor;

        distance = this.loc.distanceTo(new toxi.geom.Vec2D(p5.mouseX, p5.mouseY));
        tempColor = new toxi.color.TColor.newHSV(0.5, p5.frameCount / 50 * distance / p5.width, 1 - p5.frameCount / 50 * distance / p5.width);
        return this.color = p5.color(tempColor.red() * 255, tempColor.green() * 255, tempColor.blue() * 255);
      };

      Particle.prototype.display = function() {
        p5.rectMode(p5.CENTER);
        p5.noStroke();
        p5.fill(this.color, 127);
        return p5.rect(this.loc.x, this.loc.y, this.width, this.height);
      };

      return Particle;

    })();
    particles = new Array();
    number_of_particles = 2000;
    p5.setup = function() {
      var i, p, _i, _results;

      p5.size($(window).width(), $(window).height());
      _results = [];
      for (i = _i = 1; _i <= number_of_particles; i = _i += 1) {
        p = new Particle({
          x: p5.width / 2,
          y: p5.height / 2,
          velx: p5.random(-1, 1),
          vely: p5.random(-1, 1),
          height: 10,
          width: 10
        });
        _results.push(particles.push(p));
      }
      return _results;
    };
    return p5.draw = function() {
      var p, _i, _len, _results;

      _results = [];
      for (_i = 0, _len = particles.length; _i < _len; _i++) {
        p = particles[_i];
        p.calc();
        _results.push(p.display());
      }
      return _results;
    };
  };

  /* do not edit blow
  */


  $(window).resize(function() {
    return processing.size($(window).width(), $(window).height());
  });

  $(document).ready(function() {
    var canvas;

    canvas = document.getElementById("p5canvas");
    return window.processing = new Processing(canvas, coffee_draw);
  });

}).call(this);
